// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Models;

namespace Server.Migrations
{
    [DbContext(typeof(NCKH_DBContext))]
    partial class NCKH_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Server.Models.Class", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("facultyID")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("facultyID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Server.Models.Faculty", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("Server.Models.Student", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("classID")
                        .HasColumnType("bigint");

                    b.Property<string>("dateOfBirth")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("gender")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("placeOfBirth")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("yearOfAdmission")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("classID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Server.Models.Class", b =>
                {
                    b.HasOne("Server.Models.Faculty", "Faculty")
                        .WithMany("Classes")
                        .HasForeignKey("facultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Server.Models.Student", b =>
                {
                    b.HasOne("Server.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("classID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("Server.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Server.Models.Faculty", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
